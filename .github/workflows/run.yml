name: Generate Latest macOS Tahoe ISO file

on:
  workflow_dispatch:

run-name: Generate macOS Tahoe ISO file 

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Free up disk space
        run: |
          # Remove large, unused packages
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /Library/Android
          
          # Remove cached tools and user caches
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf "$HOME/.cache"
          
          # Remove Xcode to free ~10â€“15GB
          sudo rm -rf /Applications/Xcode.app
          
          # Clean temporary files
          sudo rm -rf /tmp/*
          
          df -h
      - name: Install Python dependencies
        run: pip install requests
      - name: Fetch latest macOS installer URL
        id: macos
        run: |
          python <<'PYCODE'
          import requests, plistlib, gzip, io

          def get_latest_macos_info():
              data = requests.get("https://gdmf.apple.com/v2/pmv").json()
              macos = data["PublicAssetSets"]["macOS"]
              pub = [r for r in macos if r.get("ReleaseType") == "Public"]
              latest = sorted(pub, key=lambda x: x["PostingDate"], reverse=True)[0]
              return latest["ProductVersion"]

          def get_swcdn_link(version):
              major = version.split(".")[0]
              url = f"https://swcatalog.apple.com/content/catalogs/others/index-{major}.sucatalog.gz"
              resp = requests.get(url)
              catalog = plistlib.load(gzip.GzipFile(fileobj=io.BytesIO(resp.content)))

              for p in catalog["Products"].values():
                  meta = p.get("ExtendedMetaInfo", {})
                  if meta.get("ProductName", "").startswith("macOS") and meta.get("ProductVersion", "").startswith(version):
                      for pkg in p.get("Packages", []):
                          u = pkg.get("URL", "")
                          if "swcdn.apple.com" in u:
                              print(f"::set-output name=macos_url::{u}")
                              exit(0)
              exit(1)

          get_swcdn_link(get_latest_macos_info())
          PYCODE
          
      - name: Download macOS Installer
        run: |
          curl -L -o /tmp/InstallAssistant.pkg "${{ steps.macos.outputs.macos_url }}"
      - name: Install the assistant
        run: |
          sudo installer -pkg /tmp/InstallAssistant.pkg -target /
      - name: Generate macOS Installer
        run: |
          sudo hdiutil create -o /tmp/Tahoe -size 20000m -volname 'Tahoe' -layout SPUD -fs HFS+J
          sudo hdiutil attach /tmp/Tahoe.dmg -noverify -mountpoint /Volumes/Tahoe
          sleep 10
          sudo /Applications/'Install macOS Tahoe'.app/Contents/Resources/createinstallmedia --volume /Volumes/Tahoe --nointeraction
          sudo hdiutil detach -force /Volumes/Install\ macOS\ Tahoe
          sudo hdiutil convert /tmp/Tahoe.dmg -format UDTO -o /tmp/Tahoe.cdr
          sleep 10
          sudo mv /tmp/tahoe.cdr /tmp/tahoe.iso
      - name: Upload ISO image
        uses: actions/upload-artifact@v4
        with:
          name: tahoe.iso
          path: /tmp/tahoe.iso
